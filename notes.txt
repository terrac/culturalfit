1 create II groups
2 probably rename initial groups to be III or II
3 create I groups
4 create whatever level next groups
5 keen eye towards individualized and interesting
  questions( probably will need to source from community)e

1 admin page
  a All users/ all answered questions
 

1 figure out issue with google login

1 create a page to add the questions
  a in console servlet,start adding initial questions that point to groups 
#2 make the answer thing change the group
#3 remove nextgroup logic

  Are you interested in technical questions?
  are you interested in web development languages
  are you interested in php
  are you interested in ruby
  are you interested in more languages? (you can directly type in your language
  on the group select page)
  are you interested in popular languages
  are you interested in java
  are you interested in javascript
  
  are you interested in frontend development languages
  are you interested in html
  are you interested in sql
  are you interested in javascript


1 write out initial questions
  a "are you interested in questions, and then a 1-5 level of proficency
2 do coding

1 a suggest box with the label "Move to on correct answer"
2 remove next group logic, parent group logic
3 on a correct answer, have it check the question to see if there is a
 next group name on correct, if so then switch groups and return appropriate
 questions along with new group name



1 inital welcome group
  associated questions
  then are you interested in java
1 no more parent group logic
  questions that immediately move you to another group based on the answer
  
  

1 readd in the

1 only show people with verified email addresses (to start with just google since they are verified
2 on clicking charge 100 points
3 anyone who signs up on a recruiter sign up link through google gets 300 points



#a if there is a temporary cookie on the register page, and there is a successful register then clear
  

#1 remove the sign in security part
#2 if the user has not been created then create a temporary user (with a temporary flag)
#3 let them act as normal, but add a "make permanent user button" in addition to the login
3 on clicking it will pop over to the login page, with register selected, and from then on the select
  #b also set the checbox to true
  #c additionally don't create a guser, just set temporary to false
Video, words and website
  a show someone clicking through the website and answering some questions
  b show them taking that link, and putting it on their resume
  c show a recruiter looking at two different resumes, and seeing the question one
  

1 hobbies - do nothing
 travel
 cars
 hiking
 sports
 
2  

1 once a day beta email user
  a click on a link in the profile
  b this gives a form with a partial subjet (showing uneditable part)
  c you can then hit send to email person
  d a note saying, this is beta



1 if no user, redirect to login required page
  a add a link to a google login page (using the google login link)
  b add a email/pass combo and register checkbox
2 email pass sends to itself, which then displays any errors or redirects
  back to main on successful login
3 if google login, it then checks to see if person is logged in and does setup
  there  




1 page that displays all groups and sums up the user groups
  a it is a servlet
  b it s
2


1 30 question for each basic group
  a javascript questions
  b java questions
  c html
  d css
  e sql
  
2 bootstrap for buttons insead of radio boxes on add yes or no question  

body {
    background-color: #d0e4fe;
}
In this case everything below the navigation of the page will have a background color set, but
the top portion of the document will not have a color set

h1 {
    color: orange;
}
All headers will have the color orange set 

p {
    font-size: 20pixels;
}
All p elements will have the font size set to 20 pixels

CSS stands for Continuous Style Sheets

<link rel="stylesheet" type="text/css" href="stylish.css">
Will link to a stylesheet

<style href="mystyle.css">
Will link to a stylesheet

Style sheets should be placed in the head of the document

Style sheets should be placed before everything else in the document

<css> is used to style inside a document

<style> is used to put css inside a document

br "color=blue" is correct syntax

backgroundColor will set the background color

<p text-size="10t"></p>
Will increase the text size by 10 times its current amount

<p style="font-size:bold;">
Will make the font bold for all p elements


intermediate css
//this is a css comment

inline styles are preferred over classes because classes are too abstract

* is used in debugging when trying to determine whether or not a style is correct

basic programming- general concepts

javascript specific

java specific



sql specific

Selecting data in SQL is accomplished with the GET keyword
Getting data in SQL is accomplished with the SELECT keyword

Modifying data in sql is accomplished with the UPDATE keyword
Updating data in sql is accomplished with the MODIFY keyword

Adding data in sql is accomplished with the INSERT keyword
Inserting data in sql is accomplished with the ADD keyword

Removing data in sql is accomplished with the DELETE keyword
Deleting data in sql is accomplished with the REMOVE keyword



3 programming-basic solid set of "You should get 100% on these" basic questions
  a basic this is "html" questions (exising list is fine
  b basic css questions
  
  c basic javascript (ie no gotchas, just loops, alerts, functions, etc
  d on the main category what is a function, what is a for loop, what is a database, etc
4 then onto some intermediate questions
5 then share wider (using programming-basic link)


#1 public profile includes tries in badge
#2 test simple question (yes or no)






#2 on click reanswer, increment 1 to tries on user group, and clear out answers
  set the group and get the next question



#1 on creating a group, make sure to clear out next question list

2 refresh admin, do through website, write simple export ( with single names first)
2.5
3 post on cscareerquestions with programming-basic, ask for feedback

1 test adding questions, creating groups, etc
5 android

3 test
4 run console
1 the create... button adds based on the select group text (and calls the select group function)
#6 make profile link back to employer and employee pages
#1 parent sibling stuff
#2 link to automatically set programming group


1 create normal users and add groups and questions
#2 create a bar at the bottom which counts to 5 and then moves you back to the profile page
3 make the get sibling stuff get a child if it is a parent
4 run console after admin on web page





1 re pull in questions
2 format the money on the drop down list
3 test the new "pull all from related groups" logic
4 test programming and hobby buttons



1 

1 pull first name
2 make indexed parent on group
3 make 3 groups get pulled 1 (selected, or just 3 generic)
4 do a random pull from one of them each time


1 Beta label



1 if the group does not have a space in the name then
  show a second 7 button list of the top groups for that (without the first name added,and badges of popularity)
  when adding a group take the first word and make the first word be the parent group if
  it exists.  Order by questions answered (create a counter on the group for that)

2 more questions, well structured
  a programming style (perfectionism/requirements/etc, the programming group gets questions from all subgroups)
  MVC,AOP,convention over configuration
3 Add beta label
4 make list horizontal, add reanswer button (make it refresh once a day)  


1 create programming group
2 create general programming button/have it populate list
3 create hobbies group
4 10 each basic python, basic android, basic cloud computing, basic dart
html, basic css, basic javascript, basic java, basic sql, basic spring

1 change "switch" to, "back"

1 If there are no more questions, then add a "move to profile button" 
 and some "move to next" buttons
 initially just call the method to set up the next stuff
2 test questions group
3 100  
4 add reanswer button 

NextGroup (group,nextGroup)
 suggestbox + addnext, adds to a list that you can delete
 
#1 don't load next question area until initial question, otherwise straight to profile
#  a make sure that the welcome doesn't have a timer
1 test question group, which lets you get comfortable
  a groups have a "next" set of options that they can select
  b they can do that in the group editor ( a suggest box that lets you add "Next" to a list of 5) 
1 more questions, sub groups ie programming/java/etc  
  
  
  
  
  
  
1 Beta test options
  a unlimited reanswers (with a note that in the final version this will be restricted)
  (after people start answering, worry about recruiters)
  
  

1 a "What is" which explains all of the decisions, linked off the welcome page

1 once a month you can reanswer all the quesions by hitting a "reanswer" button (disabled with a note normally)

1 will need to order by newness of latest question answered too


































1 new questions submitted.  If add

1 test adding questions to groups as a normal user and then getting them approved

1 put a few people on each area
2 test group create
  a create a set admin option on the servlet
  b create a set all groups to this user on servlet
  c

1 screen out locations when group has none
  a

1 workflow
  a start on next question
  #b remove timer

1 rethink welcome page


1 make some admin options to test group create


1 on clicking ok thanks, relocate to login page

1 fetch by magic number
  a (match with group)
  b ( salary range)
  c ( least recent contact/view )
    1 save queries, 
2 more questions/ create group and submit/manage questions

3 beta recruiter signup (free credits for beta testers)

#1 desired weeks of vacation
#2 remove select group button, add small popup for success
3 grid search
4 add questions
1 servlet to set groups with a null user to current user
2 fake users
  a run through all groups
  b give some random %s and numbers based on the numbers
  c look into grid component for search
3 Add question button / manage group/create group button
#1 remove clock when not being used
#2 login welcome page
  a simple bootstrap welcome with a couple of lines
  Welcome to Culture Fit
  
  Culture fit exists because the interview process needs some major updating.  
  
  It is here for people who want to be great employees and not talented interviewees.
  
  It is here for people who want to find the right candidate rather than become talented interviewers.
  
  Answer some questions, look for some talented employees in your area and see what it can do for you.
  
3 Put on resume

4 question stuff


#1 fix button select on employer page
#2 wire up login/logout
3 welcome page
Main points of welcome
login button

1 welcome page
  a (login/logout link below the button)
  b if logged out then do a popup welcoming 
  (set a cookie to only do it once, popup is a label and clicking on it moves
   in or clicking on a button does)
2 Pretty timer



1 create popup
  a do a query on it to find all groups associated
  b list groups with 

1 put the appropriate % match, then the desired salary
2 on clicking a list of groups should pop out
3 fake users

#1 write an "updateGroupLocation" function
2 fake users by faking groups and profiles through basicimpl methods

a
1 build a location to group mapping
 a (it 

1 location
2 finish up location and testing
3 fake user profiles
4 send out
5 rework add groups

1 test zip code query
2 populate with 10 fake users
3 test again

1 save state/ save salary
2 pull back top group matches by state
  a Filter by state
  b order by group match (drop down)
3 Build in 50+-10 fake results in different states
4 have a "purchase a message", for now just have it say coming soon 

1 send email to brian
2 make sure selecting salary and zip code save and reload
3 submit questions to group
4 employer
5 more questions

#1 gwt splits up url and moves to profile/userprofile if given the correct user profile key
#2 button on profile page for "public profile link"

1 profile link (history)
3

#1 fix add/edit/select
#3 fix answered

#1 a check for a null usegroup, if so then set to a "welcome" question with one question
#2 5 most popular groups as buttons
#3 make the typing have a select group button (not edit or add to start with, that should be a seperate thing

#1 parse json on admin page and create questions
2 profile link
#2.5 make profile inputs clearer (label of salary, hint for zipcode and label, not shown for salary if not selected)
3 get brian to do it



2 change logic so that people can add questions
3 do basic employer page
4 create a login screen 
  a base servlet which checks login and displays a "please login" or redirects to website
5 a restful link to the profile page (with an option to make it public)
6 show off to reddit

1 add a couple if statements that makes the answers
  a put a font tag or something inside the button
  b based on the length of the text get a % and use that to resize the font of the text
1 add a description of how the questions should be in the edit group page

1 you can add questions to be approved
  a add an extra field with a button (Approve) on group edit
  b edit group shows to everyone, but if they aren't the creator the question has a value approved=false
  c make the text boxes for the questions bigger

1 more questions java, television, video games, work life balance , python, programming

1 search by group match
  a group selectore
  b on selected call a search
  c sort by usergroup % matches
  d limit 100
  e filter by location (select state (and city, if desired)
  f display salary with users
  g show example idea


 zip code (RadiusBox.java, http://www.unitedstateszipcodes.org/zip-code-database/, put on page then parse
 and filter using radius box 

4 Add a "For potential employers" button in the top right corner

5 it has a single list heading, a button to switch back to employees in the same spot


7 5 groups (java, television, video games, work life balance, , python, programming)

8 company you currently work for (not visible)


9 create no users, but write some scrpts to allow 4000 to be created so that it looks like the website
 is steadily gaining in popularity 

#1 make the top group name get updated on it being changed, make that a static method
#  of the top area
  
#2 list and ability to disable questions (mention that you cannot edit them)



1 make edit group be

1 group permissions (administrator, can add other people as well)
2 question list (and ability to disable)
#3 do something better than the alert and make sure there is a minimum spacing on the label
  a suggest a related group (pick a tag and pull groups with the same tag, do a couple)
  b add some buttons which set the current group and get the next question



1 make sure that answering questions correctly is saved
2 check %







1 profile setup
  e give a % for the group, make running out of questions move to the profile.
  f have a list of all the groups with %s, but only process the current one, but give a date of last processing, and a button to update

  a userresults
  #b if they don't exist then do setup and pull all user questions that have processed = false;
  #c on setup run through all the new questions and get answered correctly/total
  #d take the existing amount answered correctly/ total and add the two together
  
2 do more questions and more groups, get a profile going  

1 on Add group
  a move to the edit group page
  b have a button to add questions (default to this)
  c have a button to view questions and edit tags or disable
  d

#1 on "no more questions" move back to view 
2



1 profile shows %match with group answers
  a run through all groups
  b if the group has new answers (userGroup newAnswers = true)
  c run through all user questions and questions and
2 move add question to "edit group" page
3 make the add question give a right answer

1 fill out groups and questions
2 make the navigation lose add question and gain a "navitgate groups" which will go to add questions
3 statistics, charts, case studies (ie, you do some comparisons and write your comment on how it worked out)







1 5 java interview questions
  b a link to reset visited
  
  
  


1 show the current group selected, have a button to choose a new group
2 fix submit button on next question
3 add 5 questions to a group
  a google java interview questions
4 write a page that sets up fake users to answer questions (give a percentage to make it look like how I think it should)
5 develop a search page?

1 if no group selected, don't show next question
2 once a group is selected update the next shown question
3 Add 3 groups, Add 5 fake questions to group
4 Deploy
5 Develop profile element that shows % cultural fit with group (one is with group moderators, other is with gen pop)
6 Develop some strong questions, and group modification tools
  a on clicking edit group
  b list questions, http://www.gwtproject.org/javadoc/latest/com/google/gwt/user/cellview/client/CellTable.html 
  c you can disable, but not edit questions
  d and add new questions



1 go in and try to add a question to a group
2 go to next questions and have it suggest some groups, once selected it then
  goes through the questions in that group
3 add more questions,   

2 run and test add question
 a same with tag logic
3 run and test next question
4 a "group" page that allows you to create a top level tag
  a additionally eventually modify questions


1 general ideas
  a one minute per question
  b a "cultural fit button
  c each top level tag is curated by a group













2 write add question page
  a on simple front
  b tag component, 3 text areas
  c on submit, send



4 finish next question page

3 write profile page
  a on simple front
  b tag component
  c add personal tags